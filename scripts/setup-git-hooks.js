#!/usr/bin/env node

const fs = require("fs");
const path = require("path");
const os = require("os");

/**
 * Setup Git hooks for the project
 * Installs pre-commit hook for JSON linting
 */

function setupPreCommitHook() {
  const gitHooksDir = path.join(process.cwd(), ".git", "hooks");
  const preCommitHook = path.join(gitHooksDir, "pre-commit");
  const preCommitScript = path.join(
    __dirname,
    "..",
    ".vscode",
    "scripts",
    "pre-commit-lint.js"
  );

  if (!fs.existsSync(gitHooksDir)) {
    console.log(
      "‚ö†Ô∏è  Git hooks directory not found. Make sure this is a git repository."
    );
    return false;
  }

  // Create pre-commit hook content
  const isWindows = os.platform() === "win32";
  const nodeCommand = isWindows ? "node.exe" : "node";

  const hookContent = `#!/bin/sh
# Pre-commit hook for Amorphie JSON linting
# Generated by setup-git-hooks.js

${nodeCommand} "${preCommitScript}"
`;

  try {
    // Backup existing pre-commit hook if it exists
    if (fs.existsSync(preCommitHook)) {
      const backupPath = `${preCommitHook}.backup.${Date.now()}`;
      fs.copyFileSync(preCommitHook, backupPath);
      console.log(
        `üìÅ Backed up existing pre-commit hook to ${path.basename(backupPath)}`
      );
    }

    // Write new pre-commit hook
    fs.writeFileSync(preCommitHook, hookContent);

    // Make it executable (Unix/Linux/Mac)
    if (!isWindows) {
      fs.chmodSync(preCommitHook, "755");
    }

    console.log("‚úÖ Pre-commit hook installed successfully!");
    return true;
  } catch (error) {
    console.error("‚ùå Failed to install pre-commit hook:", error.message);
    return false;
  }
}

function setupGitHooks() {
  console.log("üîß Setting up Git hooks...");
  console.log("=".repeat(50));

  const preCommitSetup = setupPreCommitHook();

  if (preCommitSetup) {
    console.log("\nüéâ Git hooks setup completed!");
    console.log("\nüìã What was installed:");
    console.log("   ‚Ä¢ Pre-commit hook for JSON linting");
    console.log("   ‚Ä¢ Automatic validation before commits");
    console.log("\nüí° Tips:");
    console.log(
      "   ‚Ä¢ JSON files will be automatically linted before each commit"
    );
    console.log(
      '   ‚Ä¢ Use "git commit --no-verify" to skip linting (not recommended)'
    );
    console.log('   ‚Ä¢ Run "npm run lint:json" to check all files manually');
    return true;
  } else {
    console.log("\n‚ùå Git hooks setup failed!");
    return false;
  }
}

// Run setup if called directly
if (require.main === module) {
  const success = setupGitHooks();
  process.exit(success ? 0 : 1);
}

module.exports = { setupGitHooks, setupPreCommitHook };
